
<div class="container">
    <div class="left-section">
        <div class="input-group">
            <label for="title">Tiêu đề:</label>
            <input type="text" id="title" >

        </div>
        <div class="input-group">
            <label for="time">Thời gian:</label>
            <input type="text" id="time" >

        </div>
        <div class="input-group">
            <label for="term">Kì thi:</label>
            <input type="text" id="term" >

        </div>
        <div class="input-group">
            <label for="subject">Môn học:</label>
            <input type="text" id="subject">

        </div>
        <div class="button-group">
            <button class="btn save">Lưu</button>
            <button class="btn cancel">Hủy</button>
        </div>

    </div>
    <div class="right-section">
        {{#each questions}}
        <div class="question-card" id="question-card-{{@index}}">
            <div class="question-header">
                {{title}}
            </div>
            <div class="question-info">
                <p>{{content}}</p>
                <!-- Selected criteria will be displayed here -->
                <div id="question-criteria-{{@index}}" class="selected-criteria"></div>
                {{!-- select criteria --}}
                <li class="criterias">
                    <a href="javascript:void(0)" class="cribtn">Criteria</a>
                    <div class="criterias-content">
                    {{#each criteria}}
                        <a href="javascript:void(0)" class="criterias-element" id="question-criteria-{{@../index}}" data-criteria="{{this}}">{{this}}</a>
                    {{/each}}
                    </div>
                </li>
                {{!-- end select criteria --}}
            </div>
            <div class="question-actions">
                <button class="btn-up" id="question-card-{{@index}}">&#9650;</button>
                <button class="btn-down" id="question-card-{{@index}}">&#9660;</button>
                <button class="btn-delete" id="question-card-{{@index}}">&#128465;</button>
            </div>
            
        </div>
        {{/each}}
        <button class="question-add">+</button>

    </div>
    
</div>

{{!-- event listener for select criteria --}}
<script>
document.addEventListener("DOMContentLoaded", function() {
    const criteriaElements = document.querySelectorAll(".criterias-element");

    criteriaElements.forEach(element => {
        element.addEventListener("click", function() {
            const criteria = this.getAttribute("data-criteria");
            const questionId = this.getAttribute("id");
            addCriteria(criteria, questionId);
        });
    });

    function addCriteria(criteria, questionId) {
        const selectedCriteriaContainer = document.getElementById(questionId);
        selectedCriteriaContainer.innerHTML = "";

        const criteriaItem = document.createElement("span");
        criteriaItem.className = "selected-criteria-item";
        criteriaItem.textContent = criteria;
        criteriaItem.setAttribute("data-id", questionId);

        criteriaItem.addEventListener("click", function() {
            this.remove();
        });

        selectedCriteriaContainer.appendChild(criteriaItem);
    }
    //Script for handling up, down, and delete button actions
    const upButtons = document.querySelectorAll('.btn-up');
    const downButtons = document.querySelectorAll('.btn-down');
    const deleteButtons = document.querySelectorAll('.btn-delete');

    upButtons.forEach(button => {
        button.addEventListener('click', function() {
            const questionCard = this.closest('.question-card');
            const previousCard = questionCard.previousElementSibling;
            if (previousCard && previousCard.classList.contains('question-card')) {
                questionCard.parentNode.insertBefore(questionCard, previousCard);
            }
        });
    });

    downButtons.forEach(button => {
        button.addEventListener('click', function() {
            const questionCard = this.closest('.question-card');
            const nextCard = questionCard.nextElementSibling;
            if (nextCard && nextCard.classList.contains('question-card')) {
                questionCard.parentNode.insertBefore(nextCard, questionCard);
            }
        });
    });

    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const questionCard = this.closest('.question-card');
            questionCard.remove();
        });
    });

    const addButton = document.querySelector('.question-add');
    addButton.addEventListener('click', function() {
        // Add your logic to add a new question card
    });
});
</script>

